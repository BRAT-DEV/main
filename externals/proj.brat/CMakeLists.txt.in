# Top CMakeLists.txt file for building the proj library using
# cmake instead of gnu configure.
#
# This file is tailored to BRAT purposes, and is not really
# suitable for stand-alone proj compilation (although it could
# serve as a good starting point.

project(PROJ)
cmake_minimum_required(VERSION 2.6.1)

set(PROJ_BUILD_PROGRAMS OFF)


set(PROJ_INCLUDE_DIRS
    ${CMAKE_CURRENT_SOURCE_DIR}/src
    CACHE INTERNAL "Include directories for the proj library")

include_directories(
${PROJ_INCLUDE_DIRS}
)


include(CheckIncludeFile)

macro(FIND_INCLUDE FILE VARIABLE)
  check_include_file(${FILE} ${VARIABLE})
  if(${VARIABLE})
    set(INCLUDES ${INCLUDES} ${FILE})
  endif(${VARIABLE})
endmacro(FIND_INCLUDE)

set(INCLUDES "")

find_include(stdarg.h       HAVE_STDARG_H)
find_include(stddef.h       HAVE_STDDEF_H)
find_include(stdlib.h       HAVE_STDLIB_H)
find_include(stdint.h       HAVE_STDINT_H)
find_include(unistd.h       HAVE_UNISTD_H)
find_include(inttypes.h     HAVE_INTTYPES_H)
find_include(memory.h       HAVE_MEMORY_H)
find_include(string.h       HAVE_STRING_H)
find_include(strings.h      HAVE_STRINGS_H)
find_include(sys/types.h    HAVE_SYS_TYPES_H)
find_include(sys/stat.h     HAVE_SYS_STAT_H)
find_include(limits.h       HAVE_LIMITS_H)
find_include(time.h         HAVE_TIME_H)
find_include(alloca.h       HAVE_ALLOCA_H)
find_include(malloc.h       HAVE_MALLOC_H)

set(PROJ_SOURCES
  src/PJ_aeqd.c
  src/PJ_gnom.c
  src/PJ_laea.c
  src/PJ_mod_ster.c
  src/PJ_nsper.c
  src/PJ_nzmg.c
  src/PJ_ortho.c
  src/PJ_stere.c
  src/PJ_sterea.c
  src/PJ_aea.c
  src/PJ_bipc.c
  src/PJ_bonne.c
  src/PJ_eqdc.c
  src/PJ_imw_p.c
  src/PJ_krovak.c
  src/PJ_lcc.c
  src/PJ_mpoly.c
  src/PJ_poly.c
  src/PJ_rpoly.c
  src/PJ_sconics.c
  src/PJ_cass.c
  src/PJ_cc.c
  src/PJ_cea.c
  src/PJ_eqc.c
  src/PJ_gall.c
  src/PJ_labrd.c
  src/PJ_lsat.c
  src/PJ_merc.c
  src/PJ_mill.c
  src/PJ_ocea.c
  src/PJ_omerc.c
  src/PJ_somerc.c
  src/PJ_tcc.c
  src/PJ_tcea.c
  src/PJ_tmerc.c
  src/PJ_airy.c
  src/PJ_aitoff.c
  src/PJ_august.c
  src/PJ_bacon.c
  src/PJ_chamb.c
  src/PJ_hammer.c
  src/PJ_lagrng.c
  src/PJ_larr.c
  src/PJ_lask.c
  src/PJ_nocol.c
  src/PJ_ob_tran.c
  src/PJ_oea.c
  src/PJ_tpeqd.c
  src/PJ_vandg.c
  src/PJ_vandg2.c
  src/PJ_vandg4.c
  src/PJ_wag7.c
  src/PJ_lcca.c
  src/PJ_geos.c
  src/PJ_boggs.c
  src/PJ_collg.c
  src/PJ_crast.c
  src/PJ_denoy.c
  src/PJ_eck1.c
  src/PJ_eck2.c
  src/PJ_eck3.c
  src/PJ_eck4.c
  src/PJ_eck5.c
  src/PJ_fahey.c
  src/PJ_fouc_s.c
  src/PJ_gins8.c
  src/PJ_gn_sinu.c
  src/PJ_goode.c
  src/PJ_hatano.c
  src/PJ_loxim.c
  src/PJ_mbt_fps.c
  src/PJ_mbtfpp.c
  src/PJ_mbtfpq.c
  src/PJ_moll.c
  src/PJ_nell.c
  src/PJ_nell_h.c
  src/PJ_putp2.c
  src/PJ_putp3.c
  src/PJ_putp4p.c
  src/PJ_putp5.c
  src/PJ_putp6.c
  src/PJ_robin.c
  src/PJ_sts.c
  src/PJ_urm5.c
  src/PJ_urmfps.c
  src/PJ_wag2.c
  src/PJ_wag3.c
  src/PJ_wink1.c
  src/PJ_wink2.c
  src/pj_latlong.c
  src/pj_geocent.c
  src/aasincos.c
  src/adjlon.c
  src/bch2bps.c
  src/bchgen.c
  src/biveval.c
  src/dmstor.c
  src/mk_cheby.c
  src/pj_auth.c
  src/pj_deriv.c
  src/pj_ell_set.c
  src/pj_ellps.c
  src/pj_errno.c
  src/pj_factors.c
  src/pj_fwd.c
  src/pj_init.c
  src/pj_inv.c
  src/pj_list.c
  src/pj_malloc.c
  src/pj_mlfn.c
  src/pj_msfn.c
  src/pj_open_lib.c
  src/pj_param.c
  src/pj_phi2.c
  src/pj_pr_list.c
  src/pj_qsfn.c
  src/pj_strerrno.c
  src/pj_tsfn.c
  src/pj_units.c
  src/pj_zpoly1.c
  src/rtodms.c
  src/vector1.c
  src/pj_release.c
  src/pj_gauss.c
  src/nad_cvt.c
  src/nad_init.c
  src/nad_intr.c
  src/emess.c
  src/pj_apply_gridshift.c
  src/pj_datums.c
  src/pj_datum_set.c
  src/pj_transform.c
  src/geocent.c
  src/pj_utils.c
  src/pj_gridinfo.c
  src/pj_gridlist.c
  src/jniproj.c
  )

include_directories(
${CMAKE_CURRENT_SOURCE_DIR}/src
)

configure_file(${CMAKE_CURRENT_SOURCE_DIR}/src/proj_config.h.in
               ${CMAKE_CURRENT_SOURCE_DIR}/src/proj_config.h)


add_library(proj STATIC ${PROJ_SOURCES})

if(PROJ_BUILD_PROGRAMS)
  add_executable(projbin src/proj.c)
  target_link_libraries(projbin proj)
  add_executable(cs2cs src/cs2cs.c)
  target_link_libraries(cs2cs proj)
  add_executable(geod src/geod.c)
  target_link_libraries(geod proj)
  add_executable(nad2bin src/nad2bin.c)
  target_link_libraries(nad2bin proj)
  add_executable(nad2nad src/nad2nad.c)
  target_link_libraries(nad2nad proj)

  install(TARGETS projbin cs2cs geod nad2bin nad2nad DESTINATION bin)
endif(PROJ_BUILD_PROGRAMS)

